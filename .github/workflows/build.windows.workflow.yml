name: Build Windows

on:
  push:
    branches: [ master, test-ci ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: "Build: Windows ${{ matrix.arch }}-${{ matrix.config }}"
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        arch: [x64, x86]
        config: [Release]
        exclude:
          - arch: x86
            qtver: Qt6
        include:
          - arch: x64
            arch_name: 64-bit
            arch_suffix: "64"
          - arch: x86
            arch_name: 32-bit
            arch_suffix: "32"
    steps:
    - name: Remove Perl Strawberry installation
      # Removes conflicting headers from include paths
      run: |
        Remove-Item -Recurse -Force C:/Strawberry

    - name: Checkout Git Repo
      uses: actions/checkout@v5
      with:
        submodules: 'recursive'

    - name: Install latest CMake
      uses: lukka/get-cmake@628dd514bed37cb0a609e84a6186cbbaa2fc0140 # latest as of 2025-10-04

    - name: Restore artifacts, or setup vcpkg (do not install any package)
      uses: lukka/run-vcpkg@b3dd708d38df5c856fe1c18dc0d59ab771f93921 # latest as of 2025-10-04
      with:
        vcpkgJsonGlob: '**/gui/qt/vcpkg.json'

    - name: Build CEmu ${{ matrix.config }} on Windows ${{ matrix.arch_name }}
      uses: lukka/run-cmake@67c73a83a46f86c4e0b96b741ac37ff495478c38 # latest as of 2025-10-04
      with:
        cmakeListsTxtPath: '${{ github.workspace }}/gui/qt/CMakeLists.txt'
        configurePreset: 'Win-${{ matrix.arch }}'
        configurePresetAdditionalArgs: "['-DDEPS_RELEASE_ONLY=ON', '-DSHORT_VERSION=v3.0']"
        buildPreset: 'Win-${{ matrix.arch }}-${{ matrix.config }}'
      env:
        VCPKG_DEFAULT_TRIPLET: ${{ matrix.arch }}-windows
        VCPKG_DEFAULT_HOST_TRIPLET: x64-windows-static-release
        VCPKG_FORCE_SYSTEM_BINARIES: 1

    - name: Upload ${{ matrix.arch_name }} ${{ matrix.config }} EXE
      uses: actions/upload-artifact@v4
      with:
        name: CEmu_win${{ matrix.arch_suffix }}_master
        path: ${{ github.workspace }}/gui/qt/CEmu.build/Win-${{ matrix.arch }}/${{ matrix.config }}/CEmu.exe

    - name: Prepare binary for release upload
      if: ${{ matrix.config == 'Release' }}
      run: |
        $ReleaseName = "CEmu-nightly_win${{ matrix.arch_suffix }}-msvc.exe"
        Rename-Item -Path "${{ github.workspace }}/gui/qt/CEmu.build/Win-${{ matrix.arch }}/${{ matrix.config }}/CEmu.exe" -NewName $ReleaseName
        echo "RELEASE_NAME=$ReleaseName" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Update nightly release
      if: ${{ matrix.config == 'Release' && github.ref == 'refs/heads/master' && github.event_name != 'pull_request' }}
      uses: softprops/action-gh-release@62c96d0c4e8a889135c1f3a25910db8dbe0e85f7 # latest as of 2025-10-04
      with:
        tag_name: nightly
        prerelease: true
        token: ${{secrets.GITHUB_TOKEN}}
        files: |
          ./gui/qt/CEmu.build/Win-${{ matrix.arch }}/${{ matrix.config }}/${{ env.RELEASE_NAME }}
